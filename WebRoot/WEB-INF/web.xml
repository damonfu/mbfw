<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

	<!--context-param元素声明应用范围内的初始化参-->
	<!--可以用这个获取getServletContext().getInitParameter(“context/param”)-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/ApplicationContext.xml</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>

	<!--过滤器元素将一个名字与一个实现javax.servlet.Filter接口的类相关联-->
	<!--用于指定WEB容器的过滤器，在请求和响应对象在Servlet处理之前和之后，可以通过此过滤器对这两个对象进行处理。-->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<!--一旦命名了一个过滤器，就要利用filter-mapping元素把它与一个或多个servlet或JSP页面相关联-->
	<!--“/*”表示拦截所有的请求 -->
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 连接池 启用Web监控统计功能   start-->
	<filter>
		<filter-name>DruidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>DruidWebStatFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--在向servlet或JSP页面制定初始化参数或定制URL时，必须首先命名servlet或JSP页面。 Servlet元素就是用来完成此项任务的-->
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
	</servlet>
	<!--务器一般为servlet提供一个缺省的URL：http://host/webAppPrefix/servlet/ServletName。-->
	<!--但是，常常会更改这个URL，以便servlet可以访问初始化参数或更容易地处理相对URL。在更改缺省URL时，使用servlet-mapping元素-->
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>
	<!-- 连接池 启用Web监控统计功能   end-->

	<filter>
		<filter-name>loginFilter</filter-name>
		<filter-class>com.mbfw.filter.LoginFilter</filter-class>
	</filter>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

    <!--Spring MVC 配置前端控制器-->
	<servlet>
		<servlet-name>springMvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/ApplicationContext-mvc.xml</param-value>
		</init-param>
        <!--表示启动tomcat容器时，初始化加载这个Servlet。-->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springMvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- tomcat等 启动之前执行 -->
	<filter>
		<filter-name>startFilter</filter-name>
		<filter-class>com.mbfw.filter.startFilter</filter-class>
	</filter>
	
	<!-- Shiro filter start -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- Shiro filter end -->
	

	<error-page>
		<error-code>404</error-code>
		<location>/404.jsp</location>
	</error-page>
	
	
<!--
	 <error-page>
	    <error-code>405</error-code>
	   <location>/WEB-INF/405.html</location>
	 </error-page>
	 <error-page>
	   <error-code>404</error-code>
	   <location>/WEB-INF/404.html</location>
	 </error-page>
	 <error-page>
	   <error-code>500</error-code>
	   <location>/WEB-INF/500.html</location>
	 </error-page>
	 <error-page>
	   <error-code>javax.servle.ServletException</error-code>
	   <location>/WEB-INF/error.html</location>
	 </error-page>
	 <error-page>
	   <error-code>java.lang.NullPointerException</error-code>
	   <location>/WEB-INF/error.html</location>
	 </error-page>
-->

	<!--如果某个会话在一定时间内未被访问，服务器可以抛弃它以节省内存。可通过使用HttpSession的 -->
	<!--setMaxInactiveInterval方法明确设置单个会话对象的超时值，或者可利用session-config元素制定缺省超时值-->
	<session-config>
		<session-timeout>600</session-timeout>
	</session-config>

	<!--指定web首页-->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

</web-app>